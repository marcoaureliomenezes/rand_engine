#!/bin/bash

# Script para diagnosticar configura√ß√£o de Trusted Publishing
# Uso: ./check_pypi_config.sh

set -e

echo "üîç Diagn√≥stico de Configura√ß√£o PyPI Trusted Publishing"
echo "======================================================"
echo ""

# Cores
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Informa√ß√µes do projeto
OWNER="marcoaureliomenezes"
REPO="rand_engine"
PACKAGE="rand-engine"

echo "üì¶ Projeto: $PACKAGE"
echo "üë§ Owner: $OWNER"
echo "üìÅ Repository: $REPO"
echo ""

# Verificar workflows existentes
echo "üìÑ Workflows Configurados:"
echo "=========================="
if [ -d ".github/workflows" ]; then
    ls -1 .github/workflows/*.yml 2>/dev/null | while read file; do
        basename "$file"
    done
else
    echo -e "${RED}‚ùå Diret√≥rio .github/workflows n√£o encontrado${NC}"
    exit 1
fi
echo ""

# Verificar workflows de publish
echo "üöÄ Workflows de Publica√ß√£o:"
echo "============================"
if [ -f ".github/workflows/auto_tag_publish_development.yml" ]; then
    echo -e "${GREEN}‚úÖ auto_tag_publish_development.yml${NC}"
else
    echo -e "${RED}‚ùå auto_tag_publish_development.yml n√£o encontrado${NC}"
fi

if [ -f ".github/workflows/auto_tag_publish_master.yml" ]; then
    echo -e "${GREEN}‚úÖ auto_tag_publish_master.yml${NC}"
else
    echo -e "${RED}‚ùå auto_tag_publish_master.yml n√£o encontrado${NC}"
fi
echo ""

# Verificar pyproject.toml
echo "üìã Vers√£o Atual:"
echo "================"
if [ -f "pyproject.toml" ]; then
    VERSION=$(grep "^version = " pyproject.toml | sed 's/version = "\(.*\)"/\1/')
    echo -e "${GREEN}‚úÖ Vers√£o no pyproject.toml: $VERSION${NC}"
else
    echo -e "${RED}‚ùå pyproject.toml n√£o encontrado${NC}"
fi
echo ""

# Verificar √∫ltimas tags
echo "üè∑Ô∏è  √öltimas Tags:"
echo "================="
git tag -l --sort=-version:refname | head -5 || echo "Nenhuma tag encontrada"
echo ""

# Verificar branch atual
echo "üåø Branch Atual:"
echo "================"
BRANCH=$(git branch --show-current)
echo "Branch: $BRANCH"
if [ "$BRANCH" = "development" ]; then
    echo -e "${GREEN}‚úÖ Voc√™ est√° na branch development${NC}"
elif [ "$BRANCH" = "master" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Voc√™ est√° na branch master${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Voc√™ est√° em uma branch feature: $BRANCH${NC}"
fi
echo ""

# Instru√ß√µes de configura√ß√£o PyPI
echo "üîê Configura√ß√£o Necess√°ria no PyPI:"
echo "===================================="
echo ""
echo "1. Acesse: https://pypi.org/manage/project/$PACKAGE/settings/publishing/"
echo ""
echo "2. Adicione 2 Trusted Publishers:"
echo ""
echo "   Publisher 1 (Development):"
echo "   -------------------------"
echo "   Owner: $OWNER"
echo "   Repository: $REPO"
echo "   Workflow: auto_tag_publish_development.yml"
echo "   Environment: (deixe em branco)"
echo ""
echo "   Publisher 2 (Master):"
echo "   ---------------------"
echo "   Owner: $OWNER"
echo "   Repository: $REPO"
echo "   Workflow: auto_tag_publish_master.yml"
echo "   Environment: (deixe em branco)"
echo ""

# Verificar se h√° workflows antigos
echo "üóëÔ∏è  Workflows Antigos:"
echo "====================="
if [ -d "z_ignore/old_workflows" ]; then
    OLD_COUNT=$(ls -1 z_ignore/old_workflows/*.yml 2>/dev/null | wc -l)
    echo -e "${YELLOW}‚ö†Ô∏è  $OLD_COUNT workflows antigos encontrados em z_ignore/old_workflows/${NC}"
    echo "   (Estes workflows n√£o s√£o mais usados)"
else
    echo -e "${GREEN}‚úÖ Nenhum workflow antigo encontrado${NC}"
fi
echo ""

# Pr√≥ximos passos
echo "üìù Pr√≥ximos Passos:"
echo "==================="
echo ""
echo "1. Configure os Trusted Publishers no PyPI (veja acima)"
echo "2. Fa√ßa um commit e push em 'development' para testar"
echo "3. Verifique os logs do GitHub Actions"
echo "4. Confirme publica√ß√£o em: https://pypi.org/project/$PACKAGE/"
echo ""
echo "üìö Documenta√ß√£o completa: .github/PYPI_TRUSTED_PUBLISHING_SETUP.md"
echo ""
echo "‚ú® Diagn√≥stico completo!"
