#!/bin/bash

# Script para testar localmente a l√≥gica de tagging do workflow
# Uso: ./test_tag_logic.sh

set -e

echo "üß™ Teste da L√≥gica de Tagging do Workflow"
echo "=========================================="
echo ""

# Extrair vers√£o do pyproject.toml
echo "1Ô∏è‚É£  Extraindo vers√£o do pyproject.toml..."
VERSION=$(grep -E '^version = "[0-9]+\.[0-9]+\.[0-9]+"' pyproject.toml | sed -E 's/version = "(.*)"/\1/')

if [ -z "$VERSION" ]; then
    echo "‚ùå Falha ao extrair vers√£o!"
    exit 1
fi

echo "‚úÖ Vers√£o extra√≠da: $VERSION"
echo ""

# Obter tags existentes
echo "2Ô∏è‚É£  Verificando tags existentes para vers√£o $VERSION..."
EXISTING_TAGS=$(git tag -l "${VERSION}*" || echo "")

if [ -n "$EXISTING_TAGS" ]; then
    echo "üìã Tags encontradas:"
    echo "$EXISTING_TAGS"
else
    echo "üìã Nenhuma tag encontrada para vers√£o $VERSION"
fi
echo ""

# Determinar pr√≥xima tag
echo "3Ô∏è‚É£  Determinando pr√≥xima tag RC (Release Candidate)..."

# Get all RC tags for this version (format: X.Y.Zrc[0-9]+)
RC_TAGS=$(git tag -l "${VERSION}rc*" | grep -E "^${VERSION}rc[0-9]+$" || echo "")

if [ -n "$RC_TAGS" ]; then
    echo "üìã RC tags encontradas:"
    echo "$RC_TAGS"
    
    # Get latest RC number
    LATEST_RC=$(echo "$RC_TAGS" | sort -V | tail -1)
    RC_NUM=$(echo "$LATEST_RC" | sed -E "s/^${VERSION}rc([0-9]+)$/\1/")
    NEXT_RC=$((RC_NUM + 1))
    TAG="${VERSION}rc${NEXT_RC}"
    echo "üìà Incrementando: $LATEST_RC ‚Üí $TAG"
else
    echo "üìã Nenhuma RC tag encontrada, come√ßando com rc1"
    TAG="${VERSION}rc1"
fi

PRERELEASE_TYPE="rc"

if [ -z "$TAG" ]; then
    echo "‚ùå Falha ao determinar TAG!"
    exit 1
fi

echo "‚úÖ Pr√≥xima tag: $TAG"
echo "‚úÖ Tipo: $PRERELEASE_TYPE"
echo ""

# Verificar se tag j√° existe
echo "4Ô∏è‚É£  Verificando se tag $TAG j√° existe..."
if git rev-parse "$TAG" >/dev/null 2>&1; then
    echo "‚ö†Ô∏è  Tag $TAG j√° existe!"
    echo "   Para testar novamente, remova a tag: git tag -d $TAG"
else
    echo "‚úÖ Tag $TAG n√£o existe ainda"
    echo ""
    echo "üéØ Resultado Final:"
    echo "=================="
    echo "Vers√£o: $VERSION"
    echo "Nova Tag: $TAG"
    echo "Tipo: $PRERELEASE_TYPE"
    echo ""
    echo "üìù Para criar a tag manualmente:"
    echo "   git tag -a \"$TAG\" -m \"Pre-release $TAG\""
    echo "   git push origin \"$TAG\""
fi
